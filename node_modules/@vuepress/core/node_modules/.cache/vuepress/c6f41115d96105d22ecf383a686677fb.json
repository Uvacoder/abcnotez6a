{"remainingRequest":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/src/GIT/index.md?vue&type=template&id=2f57379e&","dependencies":[{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/src/GIT/index.md","mtime":1641988019929},{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sh/Dropbox/SH @Coding/_PROJEKTE/Codepedia/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}