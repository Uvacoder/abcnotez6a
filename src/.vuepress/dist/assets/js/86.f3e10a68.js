(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{479:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"requests-express"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requests-express"}},[t._v("#")]),t._v(" Requests - Express")]),t._v(" "),e("p",[t._v("sort meâ€¦")]),t._v(" "),e("h3",{attrs:{id:"parsing-incoming-requests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parsing-incoming-requests"}},[t._v("#")]),t._v(" Parsing Incoming Requests")]),t._v(" "),e("h3",{attrs:{id:"dynamic-routing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-routing"}},[t._v("#")]),t._v(" Dynamic Routing")]),t._v(" "),e("ul",[e("li",[t._v("pass dynamic path segments by adding "),e("code",[t._v(":")]),t._v(" to the express router path")]),t._v(" "),e("li",[t._v("the name afther the "),e("code",[t._v(":")]),t._v(" is the name by wich you extract the data on "),e("code",[t._v("req.params")])]),t._v(" "),e("li",[t._v("optional query parameters can be passed "),e("code",[t._v("?param=value&b=2")]),t._v(" and extracted "),e("code",[t._v("req.query.myParam")])])]),t._v(" "),e("h4",{attrs:{id:"parse-body"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse-body"}},[t._v("#")]),t._v(" parse body:")]),t._v(" "),e("p",[t._v("not parsed by default, install and add: body-parser")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" express "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bodyParser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body-parser'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bodyParser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("urlencoded")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" extended"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("or use default express-parser: (better)")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("express"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("urlencoded")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" extended"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"get-route-parameter-input-from-the-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-route-parameter-input-from-the-client"}},[t._v("#")]),t._v(" Get Route Parameter Input from the Client")]),t._v(" "),e("p",[t._v("Route parameters are named segments of the URL, delimited by slashes (/).")]),t._v(" "),e("p",[t._v("Each segment captures the value of the part of the URL which matches its position. The captured values can be found in the "),e("code",[t._v("req.params")]),t._v(" object.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("route_path: '/user/:userId/book/:bookId'\nactual_request_URL: '/user/546/book/6754'\nreq.params: {userId: '546', bookId: '6754'}\n")])])]),e("h3",{attrs:{id:"get-query-parameter-input-from-the-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-query-parameter-input-from-the-client"}},[t._v("#")]),t._v(" Get Query Parameter Input from the Client")]),t._v(" "),e("p",[t._v("Another common way to get input from the client is by encoding the data after the route path, using a query string.")]),t._v(" "),e("ul",[e("li",[t._v("delimited by a question mark (?), and includes field=value couples")]),t._v(" "),e("li",[t._v("Each couple is separated by an ampersand (&)")]),t._v(" "),e("li",[t._v("Express can parse the data from the query string, and populate the object "),e("code",[t._v("req.query")])]),t._v(" "),e("li",[t._v("Some characters, like the percent (%), cannot be in URLs and have to be encoded in a different format before you can send them")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("route_path: '/library'\nactual_request_URL: '/library?userId=546&bookId=6754'\nreq.query: {userId: '546', bookId: '6754'}\n")])])]),e("p",[t._v("If you want, you can use the method "),e("code",[t._v("app.route(path).get(handler).post(handler)")]),t._v(". This syntax allows you to chain different verb handlers on the same path route. You can save a bit of typing, and have cleaner code.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" firstName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OR you can destructure and rename the keys")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" first"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" firstName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" last"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lastName "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use template literals to form a formatted string")]),t._v("\n  res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("firstName"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("lastName"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"use-body-parser-to-parse-post-requests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-body-parser-to-parse-post-requests"}},[t._v("#")]),t._v(" Use body-parser to Parse POST Requests")]),t._v(" "),e("p",[t._v("POST is the default method used to send client data with HTML forms.")]),t._v(" "),e("p",[t._v("In REST convention, POST is used to send data to create new items in the database (a new user, or a new blog post).")]),t._v(" "),e("p",[t._v("the data doesnâ€™t appear in the URL, it is hidden in the request body.")]),t._v(" "),e("p",[t._v("The body is a part of the HTTP request, also called the payload.")]),t._v(" "),e("p",[t._v("Even though the data is not visible in the URL, this does not mean that it is private.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("POST /path/subpath HTTP/1.0\nFrom: john@example.com\nUser-Agent: someBrowser/1.0\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 20\n\nname=John+Doe&age=25\n")])])]),e("ul",[e("li",[t._v("urlencoded: Body is encoded like the query string")]),t._v(" "),e("li",[t._v("With Ajax, you can also use JSON to handle data having a more complex structure.")]),t._v(" "),e("li",[t._v("There is also another type of encoding: multipart/form-data. This one is used to upload binary files.")])]),t._v(" "),e("p",[t._v("To parse the data coming from POST requests, you have to install the "),e("code",[t._v("body-parser")]),t._v(" package. This package allows you to use a series of middleware, which can decode data in different formats.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bodyParser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body-parser'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bodyParser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("urlencoded")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("extended"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note:")]),t._v(" "),e("code",[t._v("extended=false")]),t._v(" is a configuration option that tells the parser to use the classic encoding. When using it, values can be only strings or arrays. The extended version allows more data flexibility, but it is outmatched by JSON.")])]),t._v(" "),e("p",[t._v("Use the following as a template:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bodyParser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("urlencoded")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" extended"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("In order to parse JSON data sent in the POST request, use "),e("code",[t._v("bodyParser.json()")]),t._v(" as the middleware as shown below:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bodyParser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The data received in the request is available in the "),e("code",[t._v("req.body")]),t._v(" object.")]),t._v(" "),e("p",[t._v("all these statements need to go above any routes that might have been defined.")]),t._v(" "),e("h3",{attrs:{id:"get-data-from-post-requests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-data-from-post-requests"}},[t._v("#")]),t._v(" Get Data from POST Requests")]),t._v(" "),e("p",[t._v("There are several other http methods other than GET and POST. And by convention there is a correspondence between the http verb, and the operation you are going to execute on the server. The conventional mapping is:")]),t._v(" "),e("p",[t._v("POST (sometimes PUT) - Create a new resource using the information sent with the request,")]),t._v(" "),e("p",[t._v("GET - Read an existing resource without modifying it,")]),t._v(" "),e("p",[t._v("PUT or PATCH (sometimes POST) - Update a resource using the data sent,")]),t._v(" "),e("p",[t._v("DELETE => Delete a resource.")]),t._v(" "),e("p",[t._v("There are also a couple of other methods which are used to negotiate a connection with the server. Except from GET, all the other methods listed above can have a payload (i.e. the data into the request body). The body-parser middleware works with these methods as well.")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"extract-dynamic-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extract-dynamic-params"}},[t._v("#")]),t._v(" Extract dynamic params")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'products/:productId'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("-> order of the routes matters! put the specific routes before the dynamic routes")]),t._v(" "),e("p",[t._v("access param =>")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  const prodId = req.params.productId;\n")])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"using-query-items"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-query-items"}},[t._v("#")]),t._v(" Using Query Items")]),t._v(" "),e("p",[t._v("query-parameters")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("...url?edit=true&title=new\n")])])]),e("p",[t._v("-> access:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("req.query.parameter\n")])])]),e("p",[t._v("-> the extracted value is always a string! "),e("code",[t._v('"true"')]),t._v(" instead of "),e("code",[t._v("true")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);a.default=n.exports}}]);