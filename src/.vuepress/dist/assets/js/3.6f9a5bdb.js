(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{369:function(e,t,a){e.exports=a.p+"assets/img/sql_relations.fea0dc85.png"},370:function(e,t,a){e.exports=a.p+"assets/img/onetoone.0abfaebe.png"},371:function(e,t,a){e.exports=a.p+"assets/img/onetomany.0ad32566.png"},372:function(e,t,a){e.exports=a.p+"assets/img/manytomany.ff5fd526.png"},373:function(e,t,a){e.exports=a.p+"assets/img/manytomany2.836a8341.png"},374:function(e,t,a){e.exports=a.p+"assets/img/many2many.c01bece9.png"},457:function(e,t,a){"use strict";a.r(t);var s=a(45),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"sql-relations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-relations"}},[e._v("#")]),e._v(" SQL Relations")]),e._v(" "),s("p",[e._v("To refer from one table to the other. For Example:")]),e._v(" "),s("p",[e._v("A table “Teachers” and a table “Courses”. In the table “Courses” you have a column called “Teacher” where you want to refer to an entry in the table “Teachers”.")]),e._v(" "),s("img",{attrs:{src:a(369)}}),e._v(" "),s("h2",{attrs:{id:"foreign-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreign-keys"}},[e._v("#")]),e._v(" Foreign keys")]),e._v(" "),s("p",[e._v("(point to other table)")]),e._v(" "),s("p",[e._v("https://www.w3schools.com/sql/sql_foreignkey.asp)")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" orders "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INT")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    oder_number "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    customer_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    product_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("PRIMARY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOREIGN")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("customer_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("REFERENCES")]),e._v(" customers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOREIGN")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("product_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("REFERENCES")]),e._v(" products"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://www.mariadbtutorial.com/mariadb-basics/mariadb-foreign-key/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tutorial on foreign keys - MariaDB"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("A foreign key refers to a column in a different table.")]),e._v(" "),s("p",[e._v('In our example, we have a table “Teachers” and a table “Courses”. In "courses", we have a column called “Teacher”, which refers to the “Teacher” table.')]),e._v(" "),s("p",[e._v("Use  SHOW CREATE TABLE  to see how it was created: "),s("code",[e._v("CONSTRAINT")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("+---------+--------------------------------------\n| Table   | Create Table\n+---------+--------------------------------------\n| Courses | CREATE TABLE `Courses` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(20) DEFAULT NULL,\n  `hours` int(11) DEFAULT NULL,\n  `teacher` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n\tKEY `teacher` (`teacher`),\n  CONSTRAINT `teacher` FOREIGN KEY (`teacher`) REFERENCES `Teachers` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 |\n+---------+--------------------------------------\n")])])]),s("p",[e._v("like this:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("KEY <key_name> (<column_name>), \t# key_name: you can choose a name \nCONSTRAINT <constraint_name> \t\t\t# constraint_name: you can choose a name \nFOREIGN KEY (<column_name>) \t\t\t# specify column in the table \nREFERENCES <foreign_table>(<foreign_column>) \n# table and column) from the referenced table\n")])])]),s("hr"),e._v(" "),s("h2",{attrs:{id:"one-to-one-relationship"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#one-to-one-relationship"}},[e._v("#")]),e._v(" One-to-One Relationship")]),e._v(" "),s("p",[e._v("In a one-to-one relationship, a row of table A is associated with exactly one row of table B and vice-versa")]),e._v(" "),s("ul",[s("li",[e._v("example, a person may only have one passport assigned to them. Conversely, a passport may only be issued to one person.")])]),e._v(" "),s("p",[e._v("To enforce a strictly one-to-one relationship in PostgreSQL, we need another keyword, "),s("code",[e._v("UNIQUE")]),e._v(". By appending this keyword to the declaration of the foreign key, we should be all set.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("license_id char(20) REFERENCES driver(license_id) UNIQUE\n")])])]),s("img",{attrs:{src:a(370)}}),e._v(" "),s("p",[e._v("The full PostgreSQL script for creating these two tables is as follows:")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" driver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    license_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("PRIMARY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    address "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    date_of_birth "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("date")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("      \n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" license "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("integer")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("PRIMARY")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    state_issued "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    date_issued "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    date_expired  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    license_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("REFERENCES")]),e._v(" driver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("license_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("UNIQUE")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" \n")])])]),s("p",[e._v("Select columns corresponding to "),s("code",[e._v("book")]),e._v(" and "),s("code",[e._v("book_details")]),e._v(" in the "),s("code",[e._v("SELECT")]),e._v(" statement. Use the primary key of "),s("code",[e._v("book")]),e._v(" and foreign key of "),s("code",[e._v("book_details")]),e._v(" to write the "),s("code",[e._v("WHERE")]),e._v(" clause of this query. For example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT table_one.column_one, table_two.column_two\nFROM table_one, table_two\nWHERE table_one.primary_key = table_two.foreign_key\n")])])]),s("p",[e._v("An alternative is to use an inner "),s("code",[e._v("JOIN")]),e._v(" query.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SELECT table_one.column_one, table_two.column_two\nFROM table_one\nJOIN table_two\nON table_one.primary_key = table_two.foreign_key\n")])])]),s("hr"),e._v(" "),s("h2",{attrs:{id:"one-to-many-relationships"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#one-to-many-relationships"}},[e._v("#")]),e._v(" One-to-Many Relationships")]),e._v(" "),s("p",[e._v("For example, consider a table where we want one person to be able to have many email addresses.")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("we need to represent a one-to-many relationship with two tables - a parent and a child table.")])]),e._v(" "),s("li",[s("p",[e._v("a parent table will house a primary key and the child table will house both primary and foreign keys.")])]),e._v(" "),s("li",[s("p",[e._v("The foreign key binds the child table to the parent table.")])])]),e._v(" "),s("img",{attrs:{src:a(371)}}),e._v(" "),s("p",[e._v("To write an "),s("code",[e._v("INNER JOIN")]),e._v(" query of three tables, use the following syntax:")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" table_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("column_one "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("column_two "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" table_three"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("column_three "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_three\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" table_one\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INNER")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("JOIN")]),e._v(" table_two\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ON")]),e._v(" table_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INNER")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("JOIN")]),e._v(" table_three\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ON")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" table_three"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("A teacher can teach multiple courses, but a course can only have one teacher.")]),e._v(" "),s("ul",[s("li",[e._v("you do this by "),s("strong",[e._v("creating a foreign key in the table of the entity of the “one” side")]),e._v(".")]),e._v(" "),s("li",[e._v("put the reference in the table that can only have one reference to the other")]),e._v(" "),s("li",[e._v("In our example, that’s the Courses table, because a course can only have one teacher")])]),e._v(" "),s("blockquote",[s("p",[e._v("⚠ "),s("strong",[e._v("Important:")]),e._v(" Always put the foreign key into the table of the “one” side of the one-to-many relationship. It does not work on the “many” side.")])]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"many-to-many-relationships"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#many-to-many-relationships"}},[e._v("#")]),e._v(" Many-to-Many Relationships")]),e._v(" "),s("p",[e._v("examples of many to many relationships:")]),e._v(" "),s("ul",[s("li",[e._v("A student can take many courses while a course can have enrollments from many students.")]),e._v(" "),s("li",[e._v("A recipe can have many ingredients while an ingredient can belong to many different recipes.")]),e._v(" "),s("li",[e._v("A customer can patronize many banks while a bank can service many different customers.")])]),e._v(" "),s("p",[e._v("a many-to-many relationship can be broken into two one-to-many relationships")]),e._v(" "),s("p",[e._v("To implement a many-to-many relationship in a relational database, we would create a third cross-reference table also known as a join table.")]),e._v(" "),s("p",[e._v("It will have these two constraints:")]),e._v(" "),s("ul",[s("li",[e._v("foreign keys referencing the primary keys of the two member tables.")]),e._v(" "),s("li",[e._v("a composite primary key made up of the two foreign keys.")])]),e._v(" "),s("img",{attrs:{src:a(372)}}),e._v(" "),s("p",[e._v("Both "),s("code",[e._v("recipe_id")]),e._v(" and "),s("code",[e._v("ingredient_id")]),e._v(" also serve as a composite primary key for "),s("code",[e._v("recipes_ingredients")]),e._v(".")]),e._v(" "),s("blockquote",[s("p",[e._v("To display selected columns ("),s("code",[e._v("column_one")]),e._v(" and "),s("code",[e._v("column_two")]),e._v(") from different tables ("),s("code",[e._v("table_one")]),e._v(" and "),s("code",[e._v("table_two")]),e._v(") as aliases ("),s("code",[e._v("alias_one")]),e._v(" and "),s("code",[e._v("alias_two")]),e._v(") and join them with the help of a cross-reference table ("),s("code",[e._v("joined_table")]),e._v("), use the following syntax:")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" column_one "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" column_two "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_two\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" table_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" joined_table\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" table_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" joined_table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key_one\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("AND")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" joined_table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key_two\n")])])]),s("p",[e._v("Alternatively, you can query with "),s("code",[e._v("INNER JOIN")]),e._v(" from three tables.")]),e._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" column_one "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" column_two "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" alias_two\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" table_one\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INNER")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("JOIN")]),e._v(" joined_table\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ON")]),e._v(" table_one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" joined_table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key_one\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INNER")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("JOIN")]),e._v(" table_two\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ON")]),e._v(" table_two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("primary_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" joined_table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("foreign_key_two\n")])])])]),e._v(" "),s("img",{attrs:{src:a(373)}}),e._v(" "),s("p",[s("a",{attrs:{href:"https://web.csulb.edu/colleges/coe/cecs/dbdesign/dbdesign.php?page=manymany.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://web.csulb.edu/colleges/coe/cecs/dbdesign/dbdesign.php?page=manymany.php"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("We can’t represent a many-to-many association directly in a relation scheme, because two tables can’t be children of each other.")]),e._v(" "),s("li",[e._v("for "),s("em",[e._v("every")]),e._v(" many-to-many association, we will need an additional table, known as a "),s("strong",[e._v("junction table")]),e._v(" (sometimes also called a join table or linking table)\n"),s("ul",[s("li",[e._v("will contain two sets of FK attributes, one for each side of the association")])])]),e._v(" "),s("li",[e._v("The "),s("strong",[e._v("PK of this junction table is both FKs combined")]),e._v(".")])]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("For example, if you have a table “Courses” and a table “Students”, you want to connect these two tables in some way that a student can take many courses, and a course can have many students.")]),e._v(" "),s("p",[e._v("This is done by creating a third table that represents the relationship.")]),e._v(" "),s("img",{attrs:{src:a(374)}}),e._v(" "),s("hr")])}),[],!1,null,null,null);t.default=n.exports}}]);