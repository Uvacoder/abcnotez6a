(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{386:function(t,e,s){t.exports=s.p+"assets/img/event_loop.3bbed334.png"},387:function(t,e,s){t.exports=s.p+"assets/img/overview.8df74b05.png"},388:function(t,e,s){t.exports=s.p+"assets/img/lifecycle.02638aca.png"},505:function(t,e,s){"use strict";s.r(e);var n=s(45),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"node-event-driven-architecture"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-event-driven-architecture"}},[t._v("#")]),t._v(" Node Event-Driven Architecture")]),t._v(" "),n("p",[t._v("Node uses an Event-Driven Architecture")]),t._v(" "),n("ul",[n("li",[t._v('Node.js runs non-blocking JS code and uses an event driven cone ("Event Loop") for runnig your logic')]),t._v(" "),n("li",[t._v("A Node program exits as soon as there is no more work to do")]),t._v(" "),n("li",[t._v("Note: the "),n("code",[t._v("createServer()")]),t._v(" event never finishes by default")])]),t._v(" "),n("h2",{attrs:{id:"event-emiter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-emiter"}},[t._v("#")]),t._v(" Event Emiter")]),t._v(" "),n("ul",[n("li",[t._v("We can make our own instances of the "),n("code",[t._v("EventEmitter")]),t._v(" class and we can subscribe to listen for named events with the "),n("code",[t._v(".on()")]),t._v(" method and emit events with the "),n("code",[t._v(".emit()")]),t._v(" method.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Require in the 'events' core module")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" events "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'events'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create an instance of the EventEmitter class")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myEmitter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("events"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventEmitter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Each event emitter instance has an "),n("code",[t._v(".on()")]),t._v(" method which assigns a "),n("em",[t._v("listener")]),t._v(" callback function to a named event.")]),t._v(" "),n("p",[n("code",[t._v(".on(event, callbackFunction)")])]),t._v(" "),n("p",[n("code",[t._v(".emit(eventName, data)")]),t._v(" method announces that named event has occurred.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("newUserListener")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("We have a new user: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Assign the newUserListener function as the listener callback for 'new user' events")]),t._v("\nmyEmitter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new user'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newUserListener"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit a 'new user' event")]),t._v("\nmyEmitter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new user'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lily Pad'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//newUserListener will be invoked with 'Lily Pad'")]),t._v("\n")])])]),n("h2",{attrs:{id:"event-loop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop"}},[t._v("#")]),t._v(" Event-Loop")]),t._v(" "),n("h4",{attrs:{id:"node-js-uses-only-one-single-thread"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-js-uses-only-one-single-thread"}},[t._v("#")]),t._v(" Node.js uses only one single Thread")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Node uses an event loop which enables asynchronous actions to be handled in a non-blocking way by adding callback functions to a queue of tasks to be executed when the callstack is empty.")])]),t._v(" "),n("li",[n("p",[t._v("keeps on running as long as there are event listener registered.")])]),t._v(" "),n("li",[n("p",[t._v("single threaded")])])]),t._v(" "),n("img",{staticStyle:{zoom:"33%"},attrs:{src:s(386),alt:"event_loop"}}),t._v(" "),n("p",[t._v("cl"),n("code",[t._v("process.exit")]),t._v(" ends the app")]),t._v(" "),n("h4",{attrs:{id:"event-loop-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-2"}},[t._v("#")]),t._v(" Event Loop")]),t._v(" "),n("ul",[n("li",[t._v("started, when Node.js starts")]),t._v(" "),n("li",[t._v("Handles Event Callbacks")])]),t._v(" "),n("p",[t._v("checks")]),t._v(" "),n("ul",[n("li",[t._v("due Timer")]),t._v(" "),n("li",[t._v("pending callbacks")]),t._v(" "),n("li",[t._v("if there are too many open callbacks, it will postpone those")]),t._v(" "),n("li",[t._v("close event-callbacks")])]),t._v(" "),n("p",[t._v("process.exit refs==0")]),t._v(" "),n("p",[t._v("refs is a counter for the open callbacks")]),t._v(" "),n("img",{staticStyle:{zoom:"33%"},attrs:{src:s(387),alt:"overview"}}),t._v(" "),n("img",{staticStyle:{zoom:"33%"},attrs:{src:s(388),alt:"lifecycle"}}),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"worker-pool"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-pool"}},[t._v("#")]),t._v(" Worker Pool")]),t._v(" "),n("ul",[n("li",[t._v("operation that take long, are send to the Worker Pool\n-> does the heavy lifting")])]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"event-driven-code-execution"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-driven-code-execution"}},[t._v("#")]),t._v(" Event Driven Code Execution")]),t._v(" "),n("p",[t._v("-> pass a function (callback) that will be called, when the event happens")]),t._v(" "),n("p",[t._v("-> you register code, that will run sometime in the future")]),t._v(" "),n("p",[n("code",[t._v("writeFileSync")]),t._v(" - synchronus Code -blocks Execution")]),t._v(" "),n("p",[n("code",[t._v("writeFile")]),t._v(" - asynchronus -> contains a callback")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("fs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message.txt'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("302")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Location'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("-> code is not blocked. This should be used.")])])}),[],!1,null,null,null);e.default=a.exports}}]);