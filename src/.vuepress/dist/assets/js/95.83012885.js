(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{481:function(t,e,a){"use strict";a.r(e);var s=a(45),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-basics"}},[t._v("#")]),t._v(" JavaScript Basics")]),t._v(" "),a("h2",{attrs:{id:"comments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comments"}},[t._v("#")]),t._v(" Comments")]),t._v(" "),a("div",{staticClass:"language-JS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// single line comment")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* multiline comment */")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" also works within a line: ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IGNORED!*/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Still just prints 5")]),t._v("\n")])])]),a("h2",{attrs:{id:"basic-syntax-and-logic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-syntax-and-logic"}},[t._v("#")]),t._v(" Basic Syntax and Logic")]),t._v(" "),a("ul",[a("li",[t._v("Add a semicolon at the end of each executable statement.")]),t._v(" "),a("li",[t._v("When you name a variable (or array, function etc.) the first character must be a letter, an underscore (_) or a dollar sign ($). Subsequent characters may be letters, numbers, underscores or dollar signs. Also:\n"),a("ul",[a("li",[t._v("it can not be one of the "),a("a",{attrs:{href:"https://www.w3schools.com/js/js_reserved.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("keywords"),a("OutboundLink")],1),t._v(" that are reserved for JavaScript (like var, if, else, for, break, etc)")]),t._v(" "),a("li",[t._v("JavaScript is case sensitive")]),t._v(" "),a("li",[t._v("By convention and for readability JavaScript uses "),a("strong",[t._v("camelCase")]),t._v(" and PascalCase. (kebap-case is not working)")])])]),t._v(" "),a("li",[t._v("what is written inside brackets is evaluated before what is outside them")]),t._v(" "),a("li",[t._v("statements can be grouped together in code blocks, inside curly brackets {...}.The purpose of code blocks is to define statements to be executed together.")])]),t._v(" "),a("h2",{attrs:{id:"reserverd-keywords"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reserverd-keywords"}},[t._v("#")]),t._v(" Reserverd Keywords")]),t._v(" "),a("p",[a("code",[t._v("abstract, arguments, await*boolean, break, bytecase, catch, char, class, const, continuedebugger, default, delete, do, doubleelse, enum, eval, export, extendsfalse, final, finally, float, for, functiongotoif, implements, import,in, instanceof, int, interfacelet, longnative, new, nullpackage, private, protected, publicreturnshort, static, super, switch, synchronizedthis, throw, throws, transient, true, try, typeofvar, void, volatilewhile, withyield")])]),t._v(" "),a("p",[t._v("Also Avoid:")]),t._v(" "),a("p",[a("code",[t._v("Array, Date, eval, function hasOwnProperty, Infinity, isFinite, isNaN, isPrototypeOf, length, Math, NaN, name, Number, Object, prototype, String, toString, undefined, valueOf")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[t._v("#")]),t._v(" Data Types")]),t._v(" "),a("p",[t._v("JavaScript is a non-typed Language. When adding a number and a string, JavaScript will treat the number as a string.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("numbers")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("JavaScript has only one type of numbers - it doesn't distinguish between integer and float")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("strings")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('Any series of characters like "John Doe". Written inside quotes: ‘...’ (preferred) or “...”')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("true")]),t._v(" or "),a("strong",[t._v("false")]),t._v(". Convention for Name: "),a("em",[t._v("isCondition")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("arrays")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("structure that allows you to store a list of values in one single reference.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("objects")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Constructs that have properties. Everything in JavaScript is an object, and can be stored in a variable")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("em",[t._v("and also:")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("represents the intentional absence of a value, and is represented by the keyword null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("also represents the absence of a value though it has a different use than null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Symbol")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a newer feature to the language, symbols are unique identifiers, useful in more complex coding.")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);