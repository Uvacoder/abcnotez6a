(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{469:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"sql-read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-read"}},[t._v("#")]),t._v(" SQL Read")]),t._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),s("h2",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" SELECT")]),t._v(" "),s("p",[t._v("is used every time you want to query data from a database")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Semicolon at the End!")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" role "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Teacher"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("https://www.w3schools.com/sql/sql_select.asp")]),t._v(" "),s("h4",{attrs:{id:"specify-the-colums-to-be-shown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#specify-the-colums-to-be-shown"}},[t._v("#")]),t._v(" Specify the Colums to be shown")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products \n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products \n")])])]),s("h2",{attrs:{id:"where"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[t._v("#")]),t._v(" WHERE")]),t._v(" "),s("p",[t._v("https://www.w3schools.com/sql/sql_where.asp")]),t._v(" "),s("p",[t._v("Specify the rows to be shown")]),t._v(" "),s("p",[t._v("Restrict our query results using the "),s("code",[t._v("WHERE")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("WHERE")]),t._v(" clause filters the result set to only include rows where the following "),s("em",[t._v("condition")]),t._v(" is true.")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\n")])])]),s("h3",{attrs:{id:"operators-where"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operators-where"}},[t._v("#")]),t._v(" Operators - WHERE")]),t._v(" "),s("p",[t._v("The following operators can be used in the WHERE clause:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Description")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Example")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Equal")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_equal_to",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Greater than")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_greater_than",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Less than")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_less_than",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Greater than or equal")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_greater_than2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Less than or equal")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_less_than2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("<>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Not equal. "),s("strong",[t._v("Note:")]),t._v(" In some versions of SQL this operator may be written as !=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_not_equal_to",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("BETWEEN")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Between a certain range")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_between",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LIKE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Search for a pattern")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_like",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("IN")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("To specify multiple possible values for a column")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_in",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it"),s("OutboundLink")],1)])])])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("code",[t._v("BETWEEN")]),t._v(":  is inclusive")]),t._v(" "),s("p",[s("code",[t._v("%")]),t._v(" - Wildcard")]),t._v(" "),s("p",[s("code",[t._v("_")]),t._v(" - Wildcard")]),t._v(" "),s("p",[s("code",[t._v("LIMIT")]),t._v(" is called  "),s("code",[t._v("TOP")]),t._v(" in other engines")]),t._v(" "),s("p",[s("code",[t._v("LIKE")]),t._v(" instead of "),s("code",[t._v("===")])]),t._v(" "),s("h3",{attrs:{id:"like"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#like"}},[t._v("#")]),t._v(" Like")]),t._v(" "),s("p",[t._v("when you want to compare similar values.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("LIKE")]),t._v(" is a special operator used with the "),s("code",[t._v("WHERE")]),t._v(" clause to search for a specific pattern in a column.")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Se_en'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("%")]),t._v(" is a wildcard character that matches zero or more missing letters in the pattern. For example:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT *\nFROM movies\nWHERE name LIKE '%man%';\n")])])]),s("h3",{attrs:{id:"is-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#is-null"}},[t._v("#")]),t._v(" Is Null")]),t._v(" "),s("p",[t._v("More often than not, the data you encounter will have missing values.")]),t._v(" "),s("p",[t._v("Unknown values are indicated by "),s("code",[t._v("NULL")]),t._v(".")]),t._v(" "),s("p",[t._v("It is not possible to test for "),s("code",[t._v("NULL")]),t._v(" values with comparison operators, such as "),s("code",[t._v("=")]),t._v(" and "),s("code",[t._v("!=")]),t._v(".")]),t._v(" "),s("p",[t._v("Instead, we will have to use these operators:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("IS NULL")])]),t._v(" "),s("li",[s("code",[t._v("IS NOT NULL")])])]),t._v(" "),s("h3",{attrs:{id:"between"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#between"}},[t._v("#")]),t._v(" Between")]),t._v(" "),s("p",[t._v("used in a "),s("code",[t._v("WHERE")]),t._v(" clause to filter the result set within a certain "),s("em",[t._v("range")]),t._v(". It accepts two values that are either numbers, text or dates.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1990")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'J'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("In this statement, "),s("code",[t._v("BETWEEN")]),t._v(" filters the result set to only include movies with "),s("code",[t._v("name")]),t._v("s that begin with the letter ‘A’ up to, "),s("em",[t._v("but not including")]),t._v(" ones that begin with ‘J’.")]),t._v(" "),s("p",[t._v("However, if a movie has a name of simply ‘J’, it would actually match. This is because "),s("code",[t._v("BETWEEN")]),t._v(" goes "),s("em",[t._v("up to")]),t._v(" the second value — up to ‘J’.")]),t._v(" "),s("h3",{attrs:{id:"and"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and"}},[t._v("#")]),t._v(" And")]),t._v(" "),s("p",[t._v("to "),s("em",[t._v("combine multiple conditions")]),t._v(" in a "),s("code",[t._v("WHERE")]),t._v(" clause")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" genre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'action'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[t._v("#")]),t._v(" Or")]),t._v(" "),s("p",[s("code",[t._v("OR")]),t._v(" operator can also be used to combine multiple conditions in "),s("code",[t._v("WHERE")]),t._v(",")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" genre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'action'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"show-all-rows-of-a-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#show-all-rows-of-a-table"}},[t._v("#")]),t._v(" Show All Rows of a Table")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT * FROM Customers;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----+--------+-----+-----------------------------------+----------+\n| id | name   | age | address                           | salary   |\n+----+--------+-----+-----------------------------------+----------+\n|  1 | Teresa |  33 | Borselstr. 7, 22765 Hamburg       | 30000.00 |\n|  2 | John   |  25 | Hauptstr. 1, 22087 Hamburg        | 45000.00 |\n|  3 | Max    |  35 | Bernstorffstr. 118, 22796 Hamburg | 50000.00 |\n+----+--------+-----+-----------------------------------+----------+\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"show-a-certain-column"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#show-a-certain-column"}},[t._v("#")]),t._v(" Show a Certain Column")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT name FROM Customers;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+--------+\n| name   |\n+--------+\n| Teresa |\n| John   |\n| Max    |\n+--------+\n3 rows in set (0.003 sec)\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"queries-show-specific-rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queries-show-specific-rows"}},[t._v("#")]),t._v(" Queries: Show Specific Rows")]),t._v(" "),s("h5",{attrs:{id:"where-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("WHERE")])]),t._v(" "),s("p",[t._v("filter - always before eg "),s("code",[t._v("GROUP")])]),t._v(" "),s("h5",{attrs:{id:"having"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#having"}},[t._v("#")]),t._v(" "),s("code",[t._v("HAVING")])]),t._v(" "),s("p",[t._v("like "),s("code",[t._v("WHERE")]),t._v(", but after "),s("code",[t._v("GROUP")])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Queries are the most important feature of the SQL language. You use it to show only specific rows that match a certain search criteria – the query.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT * FROM Customers WHERE salary > 40000;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----+------+-----+-----------------------------------+----------+\n| id | name | age | address                           | salary   |\n+----+------+-----+-----------------------------------+----------+\n|  2 | John |  25 | Hauptstr. 1, 22087 Hamburg        | 45000.00 |\n|  3 | Max  |  35 | Bernstorffstr. 118, 22796 Hamburg | 50000.00 |\n+----+------+-----+-----------------------------------+----------+\n2 rows in set (0.012 sec)\n")])])]),s("p",[t._v("This follows a certain pattern:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT <columns> \t# what to show in the result\nFROM <table>\t\t\t# the table to search\nWHERE <query>;\t\t# what we search for\n")])])]),s("p",[t._v("Some more examples. You can test them out on the website:")]),t._v(" "),s("p",[t._v("https://www.sachsen.schule/~terra2014/ergebnis.php")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('SELECT * FROM BERG\nWHERE B_NAME = "Chimborazo"\n\nSELECT * FROM BERG\nWHERE HOEHE >= 7001\n\nSELECT * FROM BERG\nWHERE HOEHE >= 7000 AND HOEHE <= 8000\n\nSELECT * FROM BERG\nWHERE HOEHE BETWEEN 7000 AND 8000\n')])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"as"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as"}},[t._v("#")]),t._v(" "),s("code",[t._v("AS")])]),t._v(" "),s("p",[s("code",[t._v("AS")]),t._v(" is a keyword in SQL that allows you to "),s("em",[t._v("rename")]),t._v(" a column or table using an alias.   The new name can be anything you want as long as you put it inside of single quotes.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Titles'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Although it’s not always necessary, it’s best practice to surround your aliases with single quotes.")]),t._v(" "),s("li",[t._v("the columns are not being renamed in the table. The aliases only appear in the result.")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"sorting-the-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sorting-the-results"}},[t._v("#")]),t._v(" Sorting the Results")]),t._v(" "),s("h3",{attrs:{id:"order-by"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[t._v("#")]),t._v(" Order By")]),t._v(" "),s("p",[t._v("to list the data in our result set in a particular order.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" imdb_rating "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The column that we "),s("code",[t._v("ORDER BY")]),t._v(" doesn’t even have to be one of the columns that we’re displaying.")]),t._v(" "),s("p",[t._v("Note: "),s("code",[t._v("ORDER BY")]),t._v(" always goes after "),s("code",[t._v("WHERE")]),t._v(" (if "),s("code",[t._v("WHERE")]),t._v(" is present).")]),t._v(" "),s("h5",{attrs:{id:"order-by-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("ORDER BY")])]),t._v(" "),s("p",[t._v("always at the End (default: ASCending)")]),t._v(" "),s("p",[t._v("Multiple Conditions:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" city "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT * FROM Customers WHERE salary > 40000 ORDER BY salary;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----+------+-----+-----------------------------------+----------+\n| id | name | age | address                           | salary   |\n+----+------+-----+-----------------------------------+----------+\n|  2 | John |  25 | Hauptstr. 1, 22087 Hamburg        | 45000.00 |\n|  3 | Max  |  35 | Bernstorffstr. 118, 22796 Hamburg | 50000.00 |\n+----+------+-----+-----------------------------------+----------+\n")])])]),s("p",[t._v("In ascending order: "),s("code",[t._v("ASC")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT * FROM Customers WHERE salary > 40000 ORDER BY salary ASC;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----+------+-----+-----------------------------------+----------+\n| id | name | age | address                           | salary   |\n+----+------+-----+-----------------------------------+----------+\n|  2 | John |  25 | Hauptstr. 1, 22087 Hamburg        | 45000.00 |\n|  3 | Max  |  35 | Bernstorffstr. 118, 22796 Hamburg | 50000.00 |\n+----+------+-----+-----------------------------------+----------+\n")])])]),s("p",[t._v("In descending order: "),s("code",[t._v("DESC")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT * FROM Customers WHERE salary > 40000 ORDER BY salary DESC;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----+------+-----+-----------------------------------+----------+\n| id | name | age | address                           | salary   |\n+----+------+-----+-----------------------------------+----------+\n|  3 | Max  |  35 | Bernstorffstr. 118, 22796 Hamburg | 50000.00 |\n|  2 | John |  25 | Hauptstr. 1, 22087 Hamburg        | 45000.00 |\n+----+------+-----+-----------------------------------+----------+\n")])])]),s("h3",{attrs:{id:"ordering-data-by-multiple-columns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ordering-data-by-multiple-columns"}},[t._v("#")]),t._v(" Ordering data by multiple columns")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tutorial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("billboard_top_100_year_end\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" year_rank "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" year_rank\n")])])]),s("ul",[s("li",[t._v("columns in the "),s("code",[t._v("ORDER BY")]),t._v(" clause must be separated by commas.")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("DESC")]),t._v(" operator is only applied to the column that precedes it.")])]),t._v(" "),s("p",[t._v("you can make your life a little easier by substituting numbers for column names in the "),s("code",[t._v("ORDER BY")]),t._v(" clause. The numbers will correspond to the order in which you list columns in the "),s("code",[t._v("SELECT")]),t._v(" clause ("),s("em",[t._v("not supported by every flavor of SQL")]),t._v(")")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tutorial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("billboard_top_100_year_end\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" year_rank "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v("\n")])])]),s("p",[t._v("When using "),s("code",[t._v("ORDER BY")]),t._v(" with a row limitm the ordering clause is executed first. This means that the results are ordered "),s("strong",[t._v("before")]),t._v(" limiting to only a few rows")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"sql-distinct-for-viewing-unique-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-distinct-for-viewing-unique-values"}},[t._v("#")]),t._v(" SQL DISTINCT for viewing unique values")]),t._v(" "),s("p",[t._v("If you include two (or more) columns in a "),s("code",[t._v("SELECT DISTINCT")]),t._v(" clause, your results will contain all of the unique pairs of those two columns:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT DISTINCT year, month\n  FROM tutorial.aapl_historical_stock_price\n")])])]),s("blockquote",[s("p",[s("em",[t._v("Note: You only need to include")]),t._v(" "),s("code",[t._v("DISTINCT")]),t._v(" "),s("em",[t._v("once in your")]),t._v(" "),s("code",[t._v("SELECT")]),t._v(" "),s("em",[t._v("clause—you do not need to add it for each column name.")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("DISTINCT")]),t._v(" can be particularly helpful when exploring a new data set.")])]),t._v(" "),s("h3",{attrs:{id:"distinct-in-aggregations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distinct-in-aggregations"}},[t._v("#")]),t._v(" DISTINCT in aggregations")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" unique_months\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tutorial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aapl_historical_stock_price\n")])])]),s("p",[t._v("notice that "),s("code",[t._v("DISTINCT")]),t._v(" goes inside the "),s("a",{attrs:{href:"https://mode.com/sql-tutorial/sql-aggregate-functions",target:"_blank",rel:"noopener noreferrer"}},[t._v("aggregate function"),s("OutboundLink")],1),t._v(" rather than at the beginning of the "),s("code",[t._v("SELECT")]),t._v(" clause.")]),t._v(" "),s("blockquote",[s("p",[t._v("using "),s("code",[t._v("DISTINCT")]),t._v(", particularly in aggregations, can slow your queries down quite a bit.")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" years_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" months_count\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tutorial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aapl_historical_stock_price\n")])])]),s("h3",{attrs:{id:"distinct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distinct"}},[t._v("#")]),t._v(" Distinct")]),t._v(" "),s("p",[t._v("is used to return unique values in the output. It filters out all duplicate values in the specified column(s).")]),t._v(" "),s("p",[t._v("For instance,")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT tools \nFROM inventory;\n")])])]),s("p",[t._v("might produce:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("tools")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Hammer")])]),t._v(" "),s("tr",[s("td",[t._v("Nails")])]),t._v(" "),s("tr",[s("td",[t._v("Nails")])]),t._v(" "),s("tr",[s("td",[t._v("Nails")])])])]),t._v(" "),s("p",[t._v("By adding "),s("code",[t._v("DISTINCT")]),t._v(" before the column name,")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT DISTINCT tools \nFROM inventory;\n")])])]),s("p",[t._v("the result would now be:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("tools")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Hammer")])]),t._v(" "),s("tr",[s("td",[t._v("Nails")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[t._v("#")]),t._v(" Limit")]),t._v(" "),s("p",[t._v("most SQL tables contain hundreds of thousands of records. In those situations, it becomes important to cap the number of rows in the result.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" movies\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("saves space on our screen and makes our queries run faster.")]),t._v(" "),s("p",[s("code",[t._v("LIMIT")]),t._v(" always goes at the very end of the query. Also, it is not supported in all SQL databases.")]),t._v(" "),s("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);